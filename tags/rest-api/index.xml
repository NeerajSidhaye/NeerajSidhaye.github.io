<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>REST API on Neeraj Sidhaye</title>
    <link>https://www.neerajsidhaye.com/tags/rest-api.html</link>
    <description>Recent content in REST API on Neeraj Sidhaye</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Sun, 14 Feb 2021 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://www.neerajsidhaye.com/tags/rest-api/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Go - Building API</title>
        <link>https://www.neerajsidhaye.com/posts/go/api/gorestapi.html</link>
        <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
        
        <atom:modified>Sun, 14 Feb 2021 00:00:00 +0000</atom:modified>
        <guid>https://www.neerajsidhaye.com/posts/go/api/gorestapi.html</guid>
        <description>In this post, I will try to put together notes around GO service and REST API.
 The complete source code is available on my github repo.I have created 3 branches, each branch representing different flavour of writing service.
GO api source code
Ok, let&amp;rsquo;s go ahead&amp;hellip;
GO - WebService GO package net/http does the job for us. It stars the sever and ready to receive request at /hello with http.</description>
        
        <dc:creator>Neeraj Sidhaye</dc:creator>
        <media:content url="https://www.neerajsidhaye.com//images/posts/go/api/gorestapi.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>GO</category>
            
          
            
              <category>REST API</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>